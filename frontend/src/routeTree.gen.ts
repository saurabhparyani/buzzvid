/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedUploadImport } from './routes/_authenticated/upload'

// Create Virtual Routes

const AuthenticatedSuggestedLazyImport = createFileRoute(
  '/_authenticated/suggested',
)()
const AuthenticatedFollowingLazyImport = createFileRoute(
  '/_authenticated/following',
)()
const AuthenticatedFeedLazyImport = createFileRoute('/_authenticated/feed')()
const AuthenticatedProfileIdLazyImport = createFileRoute(
  '/_authenticated/profile/$id',
)()
const AuthenticatedPostIdLazyImport = createFileRoute(
  '/_authenticated/post/$id',
)()

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedSuggestedLazyRoute = AuthenticatedSuggestedLazyImport.update(
  {
    path: '/suggested',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
).lazy(() =>
  import('./routes/_authenticated/suggested.lazy').then((d) => d.Route),
)

const AuthenticatedFollowingLazyRoute = AuthenticatedFollowingLazyImport.update(
  {
    path: '/following',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
).lazy(() =>
  import('./routes/_authenticated/following.lazy').then((d) => d.Route),
)

const AuthenticatedFeedLazyRoute = AuthenticatedFeedLazyImport.update({
  path: '/feed',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/feed.lazy').then((d) => d.Route),
)

const AuthenticatedUploadRoute = AuthenticatedUploadImport.update({
  path: '/upload',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedProfileIdLazyRoute = AuthenticatedProfileIdLazyImport.update(
  {
    path: '/profile/$id',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
).lazy(() =>
  import('./routes/_authenticated/profile/$id.lazy').then((d) => d.Route),
)

const AuthenticatedPostIdLazyRoute = AuthenticatedPostIdLazyImport.update({
  path: '/post/$id',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/post/$id.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/upload': {
      id: '/_authenticated/upload'
      path: '/upload'
      fullPath: '/upload'
      preLoaderRoute: typeof AuthenticatedUploadImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/feed': {
      id: '/_authenticated/feed'
      path: '/feed'
      fullPath: '/feed'
      preLoaderRoute: typeof AuthenticatedFeedLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/following': {
      id: '/_authenticated/following'
      path: '/following'
      fullPath: '/following'
      preLoaderRoute: typeof AuthenticatedFollowingLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/suggested': {
      id: '/_authenticated/suggested'
      path: '/suggested'
      fullPath: '/suggested'
      preLoaderRoute: typeof AuthenticatedSuggestedLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/post/$id': {
      id: '/_authenticated/post/$id'
      path: '/post/$id'
      fullPath: '/post/$id'
      preLoaderRoute: typeof AuthenticatedPostIdLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/profile/$id': {
      id: '/_authenticated/profile/$id'
      path: '/profile/$id'
      fullPath: '/profile/$id'
      preLoaderRoute: typeof AuthenticatedProfileIdLazyImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedUploadRoute: typeof AuthenticatedUploadRoute
  AuthenticatedFeedLazyRoute: typeof AuthenticatedFeedLazyRoute
  AuthenticatedFollowingLazyRoute: typeof AuthenticatedFollowingLazyRoute
  AuthenticatedSuggestedLazyRoute: typeof AuthenticatedSuggestedLazyRoute
  AuthenticatedPostIdLazyRoute: typeof AuthenticatedPostIdLazyRoute
  AuthenticatedProfileIdLazyRoute: typeof AuthenticatedProfileIdLazyRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedUploadRoute: AuthenticatedUploadRoute,
  AuthenticatedFeedLazyRoute: AuthenticatedFeedLazyRoute,
  AuthenticatedFollowingLazyRoute: AuthenticatedFollowingLazyRoute,
  AuthenticatedSuggestedLazyRoute: AuthenticatedSuggestedLazyRoute,
  AuthenticatedPostIdLazyRoute: AuthenticatedPostIdLazyRoute,
  AuthenticatedProfileIdLazyRoute: AuthenticatedProfileIdLazyRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/upload': typeof AuthenticatedUploadRoute
  '/feed': typeof AuthenticatedFeedLazyRoute
  '/following': typeof AuthenticatedFollowingLazyRoute
  '/suggested': typeof AuthenticatedSuggestedLazyRoute
  '/post/$id': typeof AuthenticatedPostIdLazyRoute
  '/profile/$id': typeof AuthenticatedProfileIdLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/upload': typeof AuthenticatedUploadRoute
  '/feed': typeof AuthenticatedFeedLazyRoute
  '/following': typeof AuthenticatedFollowingLazyRoute
  '/suggested': typeof AuthenticatedSuggestedLazyRoute
  '/post/$id': typeof AuthenticatedPostIdLazyRoute
  '/profile/$id': typeof AuthenticatedProfileIdLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/_authenticated/upload': typeof AuthenticatedUploadRoute
  '/_authenticated/feed': typeof AuthenticatedFeedLazyRoute
  '/_authenticated/following': typeof AuthenticatedFollowingLazyRoute
  '/_authenticated/suggested': typeof AuthenticatedSuggestedLazyRoute
  '/_authenticated/post/$id': typeof AuthenticatedPostIdLazyRoute
  '/_authenticated/profile/$id': typeof AuthenticatedProfileIdLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/register'
    | '/upload'
    | '/feed'
    | '/following'
    | '/suggested'
    | '/post/$id'
    | '/profile/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/register'
    | '/upload'
    | '/feed'
    | '/following'
    | '/suggested'
    | '/post/$id'
    | '/profile/$id'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/login'
    | '/register'
    | '/_authenticated/upload'
    | '/_authenticated/feed'
    | '/_authenticated/following'
    | '/_authenticated/suggested'
    | '/_authenticated/post/$id'
    | '/_authenticated/profile/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/login",
        "/register"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/upload",
        "/_authenticated/feed",
        "/_authenticated/following",
        "/_authenticated/suggested",
        "/_authenticated/post/$id",
        "/_authenticated/profile/$id"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/_authenticated/upload": {
      "filePath": "_authenticated/upload.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/feed": {
      "filePath": "_authenticated/feed.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/following": {
      "filePath": "_authenticated/following.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/suggested": {
      "filePath": "_authenticated/suggested.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/post/$id": {
      "filePath": "_authenticated/post/$id.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/profile/$id": {
      "filePath": "_authenticated/profile/$id.lazy.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
